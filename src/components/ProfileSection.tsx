import React from 'react';
import { AvatarWithFlag } from './AvatarWithFlag';

// Custom SVG Icons
const Calendar = ({ className }: { className?: string }) => (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 111 109" className={className}>
    <path d="M 53.828 12.037 C 52.908 12.573, 51.173 14.602, 49.972 16.545 C 48.089 19.593, 47.953 20.471, 48.980 22.953 C 51.396 28.785, 59.884 29.066, 62.043 23.386 C 63.310 20.054, 62.486 17.259, 59.201 13.750 C 56.342 10.697, 56.201 10.652, 53.828 12.037 M 54 19.833 C 54 20.842, 54.296 21.963, 54.658 22.325 C 55.719 23.385, 57.933 20.988, 57.334 19.427 C 56.541 17.363, 54 17.672, 54 19.833 M 50.667 30.667 C 50.300 31.033, 50 33.636, 50 36.451 C 50 41.159, 49.740 41.724, 46.750 43.514 C 44.375 44.935, 42.101 45.374, 38.305 45.141 C 31.825 44.744, 27.622 47.002, 25.221 52.171 C 24.009 54.780, 22.760 55.969, 21 56.188 C 18.929 56.447, 18.518 57.014, 18.607 59.500 C 18.735 63.084, 24.556 90.702, 25.963 94.404 L 26.950 97 55.440 97 C 87.589 97, 84.807 97.753, 86.828 88.500 C 92.056 64.557, 93.136 58.796, 92.637 57.496 C 92.321 56.673, 91.126 56, 89.980 56 C 88.557 56, 87.448 54.923, 86.477 52.599 C 84.393 47.613, 79.322 44.844, 72.759 45.109 C 64.942 45.426, 62 43.231, 62 37.085 C 62 34.508, 61.460 31.860, 60.800 31.200 C 59.535 29.935, 51.805 29.528, 50.667 30.667 M 55.158 38 C 55.158 39.375, 55.385 39.938, 55.662 39.250 C 55.940 38.563, 55.940 37.438, 55.662 36.750 C 55.385 36.063, 55.158 36.625, 55.158 38 M 50.500 47.110 C 49.400 47.750, 47.492 49.186, 46.260 50.302 C 44.357 52.024, 43.634 52.154, 41.463 51.165 C 37.330 49.282, 33.573 49.761, 31 52.500 L 28.651 55 55.500 55 L 82.349 55 80 52.500 C 77.425 49.759, 73.670 49.282, 69.528 51.169 C 67.257 52.204, 66.629 52.018, 64.057 49.555 C 60.777 46.412, 53.847 45.162, 50.500 47.110 M 24.313 63.250 C 24.604 64.487, 26.081 71.463, 27.595 78.750 L 30.349 92 34.174 92 C 38.733 92, 38.704 92.189, 36.482 76.926 C 33.972 59.684, 34.606 61, 28.812 61 C 24.107 61, 23.817 61.145, 24.313 63.250 M 40 63.824 C 40 66.656, 42.567 85.529, 43.527 89.750 C 43.964 91.672, 44.690 92, 48.519 92 L 53 92 53 76.500 L 53 61 46.500 61 C 40.035 61, 40 61.015, 40 63.824 M 58.667 61.667 C 58.300 62.033, 58 69.008, 58 77.167 L 58 92 62.764 92 L 67.527 92 69.346 78.750 C 70.346 71.463, 71.401 64.487, 71.691 63.250 C 72.195 61.095, 71.945 61, 65.775 61 C 62.232 61, 59.033 61.300, 58.667 61.667 M 77 61.401 C 77 62.745, 72.868 89.727, 72.506 90.750 C 72.195 91.626, 73.359 92, 76.393 92 L 80.724 92 81.953 86.250 C 84.619 73.783, 86.935 62.463, 86.967 61.750 C 86.985 61.337, 84.750 61, 82 61 C 79.250 61, 77 61.180, 77 61.401" stroke="none" fill="#5890f2" fillRule="evenodd"/>
  </svg>
);

const Phone = ({ className }: { className?: string }) => (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 93 117" className={className}>
    <path d="M 27.095 17.089 C 23.390 18.570, 20.118 23.021, 19.463 27.471 C 19.137 29.687, 19.012 45.752, 19.185 63.171 C 19.500 94.833, 19.501 94.843, 21.849 97.341 C 26.026 101.784, 28.302 102.135, 50.829 101.807 L 71.966 101.500 75.233 98.232 L 78.500 94.964 78.767 60.232 C 79.126 13.531, 80.774 15.958, 48.782 16.063 C 38.177 16.098, 28.418 16.560, 27.095 17.089 M 28.894 22.114 C 24.267 23.812, 24 25.879, 24 59.936 C 24 89.786, 24.119 91.926, 25.910 94.139 C 27.789 96.462, 28.151 96.505, 48.398 96.807 L 68.977 97.114 71.488 94.603 L 74 92.091 74 59.627 C 74 41.772, 73.720 26.435, 73.379 25.545 C 71.925 21.757, 67.827 20.997, 49.300 21.079 C 39.510 21.122, 30.328 21.588, 28.894 22.114 M 28.655 25.829 C 27.203 27.434, 27 30.903, 27 54.174 C 27 78.720, 27.138 80.815, 28.853 82.367 C 30.477 83.836, 33.107 84.010, 50.075 83.772 L 69.443 83.500 70.707 81 C 71.622 79.190, 71.975 71.710, 71.985 53.885 C 71.999 30.485, 71.898 29.140, 69.927 26.635 L 67.855 24 49.082 24 C 32.166 24, 30.146 24.181, 28.655 25.829 M 32 54.024 L 32 79.047 49.250 78.774 L 66.500 78.500 66.792 57 C 66.953 45.175, 66.820 34.038, 66.497 32.250 L 65.909 29 48.955 29 L 32 29 32 54.024 M 46.040 88.452 C 44.688 90.081, 45.436 93.572, 47.288 94.276 C 49.382 95.073, 53 93.145, 53 91.232 C 53 87.410, 48.422 85.582, 46.040 88.452" stroke="none" fill="#5d92f1" fillRule="evenodd"/>
  </svg>
);

const Mail = ({ className }: { className?: string }) => (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 110 121" className={className}>
    <path d="M 50 16.737 C 47.636 17.649, 17.235 43.946, 16.584 45.642 C 16.263 46.479, 16 57.857, 16 70.927 C 16 92.678, 16.155 94.830, 17.829 96.345 C 19.454 97.816, 23.390 98, 53.174 98 C 85.963 98, 86.731 97.954, 88.595 95.898 C 90.302 94.014, 90.534 91.805, 90.823 74.648 C 91.001 64.116, 90.854 53.119, 90.496 50.208 L 89.846 44.917 75.373 32.894 C 55.258 16.185, 53.813 15.265, 50 16.737 M 37.451 33.006 C 29.778 39.609, 23.362 45.424, 23.193 45.928 C 22.913 46.760, 28.471 52.337, 45.500 68.313 C 48.800 71.409, 52.125 73.955, 52.888 73.971 C 54.384 74.002, 58.070 70.817, 73.250 56.376 C 78.612 51.275, 83 46.729, 83 46.273 C 83 45.406, 82.818 45.239, 73.985 38.014 C 70.968 35.546, 68.275 33.273, 68 32.962 C 66.378 31.127, 53.120 21, 52.340 21 C 51.824 21, 45.124 26.403, 37.451 33.006 M 51 40 C 49.702 43.934, 49.600 44, 44.840 44 C 42.178 44, 40.006 44.337, 40.012 44.750 C 40.019 45.163, 41.594 46.517, 43.512 47.759 C 47.308 50.218, 47.562 51.089, 45.884 55.902 C 44.360 60.275, 45.241 60.681, 49.391 57.515 C 53.052 54.723, 53.834 54.798, 57.746 58.319 C 60.776 61.047, 61.575 59.862, 60.076 54.861 C 58.874 50.848, 58.927 50.631, 61.666 48.390 C 63.225 47.115, 64.838 46.056, 65.250 46.036 C 65.662 46.016, 66 45.550, 66 45 C 66 44.450, 63.821 44, 61.158 44 C 56.376 44, 56.302 43.951, 55.118 40 C 54.459 37.800, 53.560 36, 53.120 36 C 52.680 36, 51.726 37.800, 51 40 M 20 72.300 C 20 85.978, 20.350 91.950, 21.200 92.800 C 22.915 94.515, 83.085 94.515, 84.800 92.800 C 86.312 91.288, 86.528 53, 85.025 53 C 84.489 53, 80.101 56.817, 75.275 61.481 L 66.500 69.963 73.402 76.445 C 79.277 81.963, 80.115 83.157, 79.030 84.464 C 78.329 85.309, 77.377 86, 76.914 86 C 76.452 86, 73.187 83.300, 69.659 80 C 66.131 76.700, 62.877 74, 62.427 74 C 61.977 74, 60.376 75.181, 58.870 76.625 C 54.733 80.588, 52.123 80.212, 44.414 74.539 C 43.465 73.841, 41.321 75.295, 36.554 79.873 C 32.949 83.334, 29.437 85.979, 28.750 85.750 C 25.937 84.814, 27.227 81.964, 32.953 76.464 C 39.175 70.487, 40.069 68.697, 37.539 67.282 C 36.736 66.832, 32.968 63.435, 29.166 59.732 C 25.364 56.029, 21.747 53, 21.127 53 C 20.330 53, 20 58.651, 20 72.300" stroke="none" fill="#5e94f1" fillRule="evenodd"/>
  </svg>
);

const MapPin = ({ className }: { className?: string }) => (
  <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 113 103" className={className}>
    <path d="M 48 14.282 C 44.425 17.718, 35.020 26.660, 27.100 34.153 C 16.710 43.985, 12.873 48.226, 13.319 49.389 C 13.659 50.275, 14.526 51, 15.245 51 C 15.964 51, 23.065 44.796, 31.026 37.213 C 56.606 12.846, 55.747 13.556, 57.740 15.121 C 59.552 16.544, 71.940 28.225, 87.179 42.878 C 93.041 48.515, 96.400 51.061, 97.446 50.659 C 98.301 50.331, 99 49.435, 99 48.667 C 99 47.900, 91.912 40.537, 83.250 32.306 C 59.157 9.412, 57.610 8.034, 56 8.035 C 55.175 8.035, 51.575 10.847, 48 14.282 M 39.726 38.295 L 24.953 52.500 24.976 71.643 C 24.997 88.162, 25.217 90.869, 26.582 91.393 C 28.646 92.185, 83.354 92.185, 85.418 91.393 C 86.785 90.869, 87 88.164, 87 71.496 L 87 52.207 79.750 45.242 C 61.377 27.593, 57.399 24.047, 56 24.068 C 55.175 24.080, 47.852 30.482, 39.726 38.295 M 42.722 42.301 L 29.944 54.500 30.222 70.500 L 30.500 86.500 35.893 86.807 C 38.859 86.976, 41.646 86.751, 42.087 86.307 C 42.528 85.863, 42.965 80.325, 43.058 74 C 43.151 67.675, 43.642 61.712, 44.149 60.750 C 44.944 59.239, 46.633 59, 56.516 59 C 70.011 59, 68.882 57.581, 69.254 75 L 69.500 86.500 75.750 86.798 L 82 87.095 82 70.626 L 82 54.156 69.471 42.328 C 62.580 35.823, 56.618 30.410, 56.221 30.301 C 55.824 30.191, 49.750 35.591, 42.722 42.301 M 48.667 64.667 C 48.300 65.033, 48 69.983, 48 75.667 L 48 86 56 86 L 64 86 64 75 L 64 64 56.667 64 C 52.633 64, 49.033 64.300, 48.667 64.667" stroke="none" fill="#5990f0" fillRule="evenodd"/>
  </svg>
);

interface ProfileSectionProps {
  participant: {
    name: string;
    birthDate: string;
    phone: string;
    email: string;
    address: {
      street: string;
      building: string;
      apartment: string;
      postalCode: string;
      city: string;
      country: string;
    };
    profileImage: string;
    flagUrl?: string;
  };
}

export function ProfileSection({ participant }: ProfileSectionProps) {
  return (
    <div className="flex flex-col sm:flex-row items-start gap-3 sm:gap-4 lg:gap-6 mb-8">
      <AvatarWithFlag 
        src={participant.profileImage}
        alt={participant.name}
        flagUrl={participant.flagUrl}
      />
      
      <div className="flex-1">
        <div className='mb-2 md:mb-6'>
          <h2 className="text-base sm:text-lg lg:text-3xl font-bold text-[#498AFD]">
            {participant.name}
          </h2>
        </div>
        
        <div className="grid grid-cols-1 lg:grid-cols-2 gap-4 lg:gap-6 text-xs sm:text-sm">
          {/* Left Column - Contact Info */}
          <div className="space-y-2 lg:space-y-2 xl:space-y-3">
            <div className="flex items-center gap-3 ">
              <Calendar className="w-6 h-6 md:w-8 md:h-8" />
              <span className=" text-sm md:text-lg text-[#316983] font-medium">{participant.birthDate}</span>
            </div>
            
            <div className="flex items-center gap-3 ">
              <Phone className="w-6 h-6 md:w-8 md:h-8" />
              <span className="text-sm md:text-lg text-[#316983] font-medium">{participant.phone}</span>
            </div>
            
            <div className="flex items-center gap-3 ">
              <Mail className="w-6 h-6 md:w-8 md:h-8" />
              <span className="text-sm md:text-lg text-[#316983] font-medium">{participant.email}</span>
            </div>
          </div>
          
          {/* Right Column - Address */}
          <div className="flex items-start gap-3 ">
            <MapPin className="w-6 h-6 mt-0.5 md:w-8 md:h-8 " />
            <div>
              <div className="text-sm md:text-lg text-[#316983] font-medium">{participant.address.street},</div>
              <div className="text-sm md:text-lg text-[#316983] font-medium">{participant.address.building}</div>
              <div className="text-sm md:text-lg text-[#316983] font-medium">{participant.address.apartment}</div>
              <div className="text-sm md:text-lg text-[#316983] font-medium">{participant.address.postalCode} {participant.address.city}</div>
              <div className="text-sm md:text-lg text-[#316983] font-medium">{participant.address.country}</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
} 