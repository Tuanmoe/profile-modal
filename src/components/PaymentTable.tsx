import React from 'react';

interface PaymentTableProps {
  payments: {
    acompte: {
      amount: string;
      date: string;
      method: 'Par chèque' | 'Par virement';
    };
    soldeRestant: {
      amount: string;
      date: string;
      method: 'Par chèque' | 'Par virement';
    };
  };
}

export function PaymentTable({ payments }: PaymentTableProps) {
  return (
    <div className="">
      {/* Header */}
      <div className="grid grid-cols-3 gap-1 sm:gap-3 lg:gap-4 bg-gray-50 p-2 sm:p-3 lg:p-4 rounded-lg text-xs sm:text-sm">
        <div className="font-semibold text-[#17313D]">MONTANTS</div>
        <div className="font-semibold text-[#17313D] hidden sm:block">Dates de paiement</div>
        <div className="font-semibold text-[#17313D] sm:hidden">Dates</div>
        <div className="font-semibold text-[#17313D] hidden sm:block">Modes de Paiement</div>
        <div className="font-semibold text-[#17313D] sm:hidden">Modes</div>
      </div>
      
      <div className="">
        {/* ACOMPTE Row */}
        <div className="grid grid-cols-3 gap-1 sm:gap-3 lg:gap-4 px-2 sm:px-4 py-2 sm:py-1 border-b text-xs sm:text-sm items-center">
          <div className="text-cyan-500 text-sm md:text-lg font-medium md:font-bold">ACOMPTE</div>
          <div className="text-cyan-500 text-xs sm:text-lg font-bold">
            <div className="block sm:hidden">{payments.acompte.amount}</div>
            <div className="block sm:hidden text-xs">payés le {payments.acompte.date}</div>
            <div className="hidden sm:block">{payments.acompte.amount} payés le {payments.acompte.date}</div>
          </div>
          <div className="flex items-center gap-1 sm:gap-2 text-xs sm:text-lg text-cyan-500">
            {/* Card SVG inline */}
            <svg xmlns="http://www.w3.org/2000/svg" width="159" height="90" viewBox="0 0 159 90" version="1.1" className="w-6 h-6 sm:w-12 sm:h-12"><path d="M 17.250 17.662 C 16.287 18.051, 16 25.479, 16 50.048 C 16 80.871, 16.066 81.965, 17.993 82.996 C 19.348 83.721, 39.066 84.030, 79.517 83.960 L 139.047 83.858 140.579 81.520 C 141.886 79.524, 142.066 74.813, 141.805 49.341 C 141.637 32.928, 141.136 18.938, 140.691 18.250 C 140.057 17.271, 126.716 17.017, 79.191 17.079 C 45.811 17.122, 17.938 17.385, 17.250 17.662 M 19.959 24 C 19.937 26.200, 19.919 35.200, 19.919 44 C 19.919 52.800, 19.937 64.500, 19.959 70 L 20 80 79 80 L 138 80 138 50 L 138 20 79 20 L 20 20 19.959 24 M 30.250 29.641 C 28.223 30.494, 28.819 32.718, 31.250 33.370 C 34.195 34.159, 60.371 34.179, 62.418 33.393 C 64.932 32.429, 64.256 30.300, 61.250 29.715 C 57.672 29.018, 31.876 28.957, 30.250 29.641 M 108 36 C 106.349 37.651, 106 39.333, 106 45.633 C 106 52.132, 105.689 53.535, 103.908 55.080 C 100.962 57.634, 102.435 59.600, 105.695 57.464 C 107.075 56.560, 109.104 56.055, 110.203 56.343 C 111.302 56.630, 113.279 56.374, 114.597 55.774 C 116.508 54.903, 117.362 55.018, 118.825 56.341 C 119.833 57.254, 121.410 58, 122.329 58 C 123.248 58, 124 58.675, 124 59.500 C 124 60.747, 121.847 61.027, 111.250 61.158 C 104.237 61.244, 97.938 61.294, 97.250 61.269 C 96.563 61.243, 96 61.847, 96 62.611 C 96 63.742, 99.168 64, 113.058 64 L 130.115 64 127.308 58.901 C 125.763 56.097, 123.825 53.579, 123 53.305 C 122.175 53.032, 120.825 52.549, 120 52.232 C 117.433 51.247, 113.557 51.271, 112.250 52.280 C 110.629 53.531, 110.589 51.632, 112.175 48.684 C 113.987 45.317, 114.899 38.865, 113.926 36.305 C 112.848 33.470, 110.644 33.356, 108 36 M 28.781 40.364 C 28.533 41.664, 28.593 44.702, 28.915 47.114 L 29.500 51.500 51.500 51.783 C 63.600 51.938, 74.513 51.817, 75.750 51.513 C 77.795 51.012, 78 50.372, 78 44.481 L 78 38 53.617 38 L 29.233 38 28.781 40.364 M 109.787 41 C 109.275 44.489, 110.482 45.061, 111.370 41.750 C 112.194 38.675, 112.148 38, 111.113 38 C 110.626 38, 110.029 39.350, 109.787 41 M 33 45 L 33 48 53.500 48 L 74 48 74 45 L 74 42 53.500 42 L 33 42 33 45 M 29.481 72.031 C 28.388 73.800, 30.451 75.191, 33.628 74.828 C 37.648 74.369, 37.431 71.590, 33.344 71.194 C 31.608 71.025, 29.870 71.402, 29.481 72.031 M 43.481 72.031 C 42.388 73.800, 44.451 75.191, 47.628 74.828 C 51.648 74.369, 51.431 71.590, 47.344 71.194 C 45.608 71.025, 43.870 71.402, 43.481 72.031 M 57.481 72.031 C 56.388 73.800, 58.451 75.191, 61.628 74.828 C 65.648 74.369, 65.431 71.590, 61.344 71.194 C 59.608 71.025, 57.870 71.402, 57.481 72.031 M 71.667 71.667 C 69.886 73.447, 71.206 75, 74.500 75 C 76.825 75, 78 74.532, 78 73.607 C 78 71.527, 73.259 70.075, 71.667 71.667 M 85.008 71.963 C 81.140 74.436, 86.054 75.034, 108.070 74.770 C 127.221 74.539, 130.500 74.281, 130.500 73 C 130.500 71.720, 127.280 71.464, 108.500 71.255 C 95.792 71.113, 85.870 71.412, 85.008 71.963" stroke="none" fill="#65c9d5" fill-rule="evenodd"/></svg>

            <span className="text-xs sm:text-base lg:text-lg lg:font-bold">{payments.acompte.method}</span>
          </div>
        </div>
        
        {/* SOLDE RESTANT Row */}
        <div className="grid grid-cols-3 gap-1 sm:gap-3 lg:gap-4 px-2 sm:px-4 py-2 sm:py-1 border-b text-xs sm:text-sm items-center">
          <div className="text-blue-500 text-sm md:text-lg font-medium md:font-bold">SOLDE RESTANT</div>
          <div className="text-blue-500 text-xs sm:text-lg font-bold">
            <div className="block sm:hidden">{payments.soldeRestant.amount}</div>
            <div className="block sm:hidden text-xs">payés le {payments.soldeRestant.date}</div>
            <div className="hidden sm:block">{payments.soldeRestant.amount} payés le {payments.soldeRestant.date}</div>
          </div>
          <div className="flex items-center gap-1 sm:gap-2 text-xs sm:text-lg text-blue-500">
            {/* Cheque SVG inline */}
            <svg xmlns="http://www.w3.org/2000/svg" width="164" height="84" viewBox="0 0 164 84" version="1.1" className="w-6 h-6 sm:w-12 sm:h-12"><path d="M 26.812 15.039 C 16.984 16.169, 15.746 19.800, 16.178 46.233 L 16.500 65.966 19.768 69.233 L 23.036 72.500 60.467 72.785 C 102.413 73.104, 103.359 72.979, 106.328 66.722 C 107.710 63.810, 108 59.877, 108 44.067 C 108 24.171, 107.337 20.183, 103.503 17 C 102 15.752, 95.803 15.416, 66.598 15 C 47.294 14.725, 29.390 14.743, 26.812 15.039 M 22.223 19.557 C 20.038 21.086, 20 21.500, 20 43.484 L 20 65.855 22.678 67.962 C 25.309 70.031, 26.024 70.063, 62.652 69.784 C 98.990 69.507, 100 69.446, 102.041 67.404 C 104.034 65.411, 104.141 64.239, 104.230 43.494 C 104.322 21.962, 104.293 21.656, 102.051 19.840 C 99.934 18.126, 97.196 18, 62.112 18 C 29.639 18, 24.139 18.215, 22.223 19.557 M 133.357 21.513 C 133.037 22.345, 133.318 23.679, 133.981 24.477 C 135.018 25.726, 133.749 25.968, 124.843 26.214 C 116.443 26.446, 114.500 26.782, 114.500 28 C 114.500 29.206, 116.556 29.598, 125 30 C 130.895 30.281, 134.952 30.855, 134.250 31.309 C 132.421 32.492, 132.724 35, 134.695 35 C 136.934 35, 142 30.087, 142 27.917 C 142 26.444, 135.841 20, 134.434 20 C 134.161 20, 133.676 20.681, 133.357 21.513 M 29.409 29.377 C 29.118 30.134, 29.020 32.947, 29.190 35.627 L 29.500 40.500 37 40.500 L 44.500 40.500 44.820 36.595 C 44.995 34.448, 44.874 31.635, 44.551 30.345 C 44.003 28.164, 43.472 28, 36.950 28 C 31.917 28, 29.788 28.389, 29.409 29.377 M 61.640 28.773 C 61.361 29.225, 61.474 30.149, 61.892 30.825 C 62.452 31.731, 66.702 31.981, 78.076 31.777 C 90.996 31.545, 93.500 31.257, 93.500 30 C 93.500 28.742, 90.969 28.456, 77.824 28.225 C 69.203 28.074, 61.920 28.320, 61.640 28.773 M 33 35.060 C 33 37.985, 33.166 38.107, 36.750 37.810 C 40.006 37.541, 40.542 37.138, 40.816 34.750 C 41.116 32.149, 40.913 32, 37.066 32 C 33.197 32, 33 32.148, 33 35.060 M 117 41.500 L 113.608 45 117 48.500 C 118.866 50.425, 121.204 52, 122.196 52 C 124.280 52, 124.384 51.586, 122.965 48.934 C 121.973 47.082, 122.353 47, 131.965 47 C 141.333 47, 142 46.867, 142 45 C 142 43.125, 141.333 43, 131.345 43 C 121.086 43, 120.752 42.932, 122.345 41.171 C 126.521 36.557, 121.491 36.867, 117 41.500 M 29 52 C 29 53.870, 29.493 54.079, 33.250 53.807 C 36.224 53.592, 37.500 53.050, 37.500 52 C 37.500 50.950, 36.224 50.408, 33.250 50.193 C 29.493 49.921, 29 50.130, 29 52 M 43.500 51 C 42.354 52.854, 44.095 54, 48.059 54 C 51.333 54, 52 53.662, 52 52 C 52 50.338, 51.333 50, 48.059 50 C 45.891 50, 43.840 50.450, 43.500 51 M 58 52 C 58 53.652, 58.667 54, 61.833 54 C 66.140 54, 67.106 53.441, 66.324 51.402 C 65.990 50.532, 64.310 50, 61.893 50 C 58.667 50, 58 50.342, 58 52 M 72.480 51.032 C 71.339 52.878, 73.489 54.170, 77.123 53.823 C 81.908 53.365, 81.694 50.600, 76.843 50.195 C 74.831 50.028, 72.868 50.404, 72.480 51.032 M 87.480 51.032 C 86.339 52.878, 88.489 54.170, 92.123 53.823 C 96.908 53.365, 96.694 50.600, 91.843 50.195 C 89.831 50.028, 87.868 50.404, 87.480 51.032 M 28.238 59.215 C 28.550 60.149, 31.442 60.500, 38.833 60.500 C 52.827 60.500, 52.677 58.583, 38.655 58.215 C 30.171 57.992, 27.903 58.210, 28.238 59.215" stroke="none" fill="#6594eb" fill-rule="evenodd"/></svg>
            <span className="text-xs sm:text-base lg:text-lg lg:font-bold">{payments.soldeRestant.method}</span>
          </div>
        </div>
        
        {/* MONTANT TOTAL Row */}
        <div className="grid grid-cols-3 gap-1 sm:gap-3 lg:gap-4 px-2 sm:px-4 py-2 sm:py-1 text-xs sm:text-sm items-center">
          <div className="text-purple-500 text-sm md:text-lg font-medium md:font-bold">MONTANT TOTAL</div>
          <div className="text-purple-500 font-bold text-lg">✓</div>
          <div className="text-purple-500 font-bold text-lg">✓</div>
        </div>
      </div>
    </div>
  );
} 